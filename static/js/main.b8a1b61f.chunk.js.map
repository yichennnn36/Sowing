{"version":3,"sources":["indexStyle.js","pages/LoginPage/LoginPageStyle.js","components/Login/LoginStyle.js","components/Input/InputStyle.js","components/Input/Input.js","constants/error.js","api.js","utils.js","components/Login/Login.js","components/Register/RegisterStyle.js","constants/success.js","components/Register/Register.js","pages/LoginPage/LoginPage.js","components/Section/SectionStyle.js","components/Ticket/Ticket.js","components/Column/Column.js","components/Section/Section.js","components/TicketEditor/TicketEditorStyle.js","components/TicketEditor/TicketEditor.js","components/Header/Header.js","components/Sidebar/Sidebar.js","pages/Kanban/Kanban.js","components/Footer/FooterStyle.js","components/Footer/Footer.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Root","styled","div","LoginPageWrapper","theme","colors","secondary","SiteLogo","tertiary","SiteDescription","primary","SiteButton","DefaultButton","button","StyleButton","FunctionBlock","keyframes","flipInX","InputWrapper","ButtonWrapper","white","Alert","warning","InputBlock","Input","type","name","placeholder","prefix","value","handleInputChange","setHasErr","errorMessage","useState","username","password","isValid","setIsValid","onChange","onBlur","e","target","usernameBoolean","test","passwordBoolean","errMessage","EMPTY_FILEDS","INVALID_PARAMS","FAIL_REGISTER","409","0","FAIL_LOGIN","400","401","BASE_URL","process","register","nickname","a","fetch","method","body","JSON","stringify","headers","response","login","categoryColors","label","color","initialData","tickets","columns","id","title","status","ticketIds","columnOrder","isLoading","availableLocations","TOKEN_NAME","setAuthToken","user","token","time","localStorage","setItem","Login","setIsLogin","inputValue","setInputValue","setErrMessage","hasErr","isClick","useRef","history","useHistory","UserOutlined","error","EyeInvisibleOutlined","length","onClick","LeftOutlined","fetchLogin","json","data","token_expire_stamp","push","errno","current","setTimeout","RightCircleOutlined","Success","success","successMessage","SUCCESS_REGISTER","Register","setIsRegister","setSuccessMessage","SmileOutlined","fetchRegister","LoginPage","isRegister","isLogin","SectionWrapper","Layout","Content","Container","props","isDragging","Ticket","ticket","index","setIsAddTicket","category","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","size","extra","PushpinFilled","style","EditOutlined","DeleteOutlined","EnvironmentFilled","locations","startDate","endDate","Card","light","TicketList","isDraggingOver","Column","columnStatus","ticketData","setTicketStatus","handleCilckAdd","columnId","droppableId","icon","PlusOutlined","droppableProps","map","ticketContent","Section","setTicketsData","onDragEnd","result","destination","source","start","finish","column","newTickets","Array","from","splice","newColumn","ticketsData","startTicketIds","newStart","finishTicketIds","newFinish","ticketId","filter","TicketEditorWrapper","Editor","fadeIn","InputRadioBlock","Label","ButtonDelete","Button","ButtonSaveBlock","CategoryRadio","Radio","TicketEditor","ticketStatus","CloseCircleOutlined","htmlFor","list","location","RangePicker","dateString","Group","radio","postTickets","postColumns","Promise","all","post","HeaderWrapper","Header","MemberInfo","SiderWrapper","Sider","Sidebar","defaultSelectedKeys","mode","Item","KanbanWrapper","Kanban","isAddTicket","FooterWrapper","FooterLogo","FooterInfo","Footer","href","App","exact","path","component","ReactDOM","render","dark","black","document","getElementById"],"mappings":"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","file":"static/js/main.b8a1b61f.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n  .content {\n    padding-bottom: 160px;\n  }\n`;\n\nconst Root = styled.div`\n  min-height: 100%;\n  margin-bottom: -160px;\n`;\n\nexport { GlobalStyle, Root };","import styled from 'styled-components';\n\nconst LoginPageWrapper = styled.div`\n  height: 800px;\n  background: ${({ theme }) => theme.colors.secondary}};\n  position: relative;\n`;\n\nconst SiteLogo = styled.div`\n  font-size: 60px;\n  font-family: 'Fredoka One', cursive;\n  color: ${({ theme }) => theme.colors.tertiary}};\n  position: absolute;\n  top: 20%;\n  left: 13%;\n`;\n\nconst SiteDescription = styled.div`\n  position: absolute;\n  top: 23%;\n  right: 13%;\n  height: 360px;\n  width: 360px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-color: lightgrey;\n\n  & h1 {\n    font-size: 80px;\n    font-family: 'Fredoka One', cursive;\n    color: ${({ theme }) => theme.colors.primary}};\n  }\n\n  & > p {\n    font-size: 20px;\n    font-family: 'Baloo 2', 'sans-serif';\n    font-weight: 600;\n    margin-top: -50px;\n    color: ${({ theme }) => theme.colors.tertiary}};\n  }\n`;\n\nconst SiteButton = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  & button + button {\n    margin-left: 18px;\n  }\n`;\n\nconst DefaultButton = styled.button`\n  border: transparent;\n  padding: 8px 16px;\n  border-radius: 20px;\n  font-size: 16px;\n\n  &:hover, &:focus {\n    cursor: pointer;\n  }\n\n  & span {\n    margin-right: 4px;\n  }\n`;\n\nconst StyleButton = styled(DefaultButton)`\n  transition: transform 0.3s;\n\n  &:hover, &:focus {\n    color: ${({ theme }) => theme.colors.primary}};\n  }\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport {\n  LoginPageWrapper,\n  SiteLogo,\n  SiteDescription,\n  SiteButton,\n  DefaultButton,\n  StyleButton\n};","import styled, { keyframes } from 'styled-components';\nimport { flipInX } from 'react-animations';\nimport { SiteDescription, DefaultButton } from '../../pages/LoginPage/LoginPageStyle';\n\nexport const FunctionBlock = styled(SiteDescription)`\n  animation: 1.5s ${keyframes`${flipInX}`};\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyleButton = styled(DefaultButton)`\n  background: ${({ theme }) => theme.colors.primary}};\n  color: ${({ theme }) => theme.colors.white}};\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Alert = styled.div`\n  color: ${({ theme }) => theme.colors.warning};\n  position: absolute;\n  top: 40%;\n  font-size: 16px;\n`;","import styled from 'styled-components';\n\nexport const InputBlock = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  margin-bottom: 30px;\n  position: relative;\n  \n  & > span {\n    position: absolute;\n    left: 3%;\n  }\n\n  & input {\n    border: 1px solid ${({ theme }) => theme.colors.white};\n    border-radius: 10px;\n    padding: 6px 10px 6px 36px;\n    width: 100%;\n\n    &:hover {\n      border-color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`;\n\nexport const Alert = styled.div`\n  color: ${({ theme }) => theme.colors.warning};\n  position: absolute;\n  top: 100%;\n  left: 2%;\n`;","import React, { useState } from 'react';\nimport { InputBlock, Alert } from './InputStyle';\n\nconst Input = ({\n  type,\n  name,\n  placeholder,\n  prefix,\n  value,\n  handleInputChange,\n  setHasErr,\n  errorMessage\n}) => {\n  const [isValid, setIsValid] = useState({\n    username: true,\n    password: true\n  });\n\n  const handleCheckValid = (e) => {\n    const { name, value } = e.target;\n    const usernameReg = /^[a-zA-Z\\d]{6,12}$/;\n    const passwordReg = /^(?=.*[A-Za-z])(?=.*\\d)[a-zA-Z\\d@$!%*#?&]{6,12}$/;\n\n    if (name === 'username' && value) {\n      const usernameBoolean = usernameReg.test(value) ? true : false;\n      setIsValid({ ...isValid, username: usernameBoolean });\n      usernameBoolean ? setHasErr(false) : setHasErr(true);\n      return;\n    }\n    if (name === 'password' && value) {\n      const passwordBoolean = passwordReg.test(value) ? true : false;\n      setIsValid({ ...isValid, password: passwordBoolean });\n      passwordBoolean ? setHasErr(false) : setHasErr(true);\n      return;\n    }\n  };\n\n  return (\n    <InputBlock>\n      {prefix}\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        onChange={handleInputChange}\n        value={value}\n        onBlur={handleCheckValid}\n      />\n      {isValid && !isValid[name] && <Alert>{errorMessage}</Alert>}\n    </InputBlock>\n  )\n};\n\nexport default Input;","const errMessage = {\n  EMPTY_FILEDS: 'All fileds are required！',\n  INVALID_PARAMS: {\n    username: 'Username does not conform to format！',\n    password: 'Password does not conform to format！',\n  },\n  FAIL_REGISTER: {\n    409: 'Username is already exist！',\n    0: 'Something wrong, Please try again！'\n  },\n  FAIL_LOGIN: {\n    400: 'Incorrect username or password, please try again！',\n    401: 'Username is not exist！',\n    0: 'Something wrong, Please try again！'\n  }\n};\n\nexport default errMessage;","const BASE_URL = process.env.REACT_APP_URL;\n\nexport const register = async (username, password, nickname) => {\n  const response = await fetch(`${BASE_URL}/sign-up`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      password,\n      nickname\n    }),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n  return response;\n};\n\nexport const login = async (username, password) => {\n  const response = await fetch(`${BASE_URL}/login`, {\n    method: 'POST',\n    body: JSON.stringify({\n      username,\n      password\n    }),\n    headers: {\n      'content-type': 'application/json'\n    }\n  })\n  return response;\n};","export const categoryColors = [\n  { label: 1, color: '#f4551c' },\n  { label: 2, color: '#6cafff' },\n  { label: 3, color: '#ffc147' },\n  { label: 4, color: '#36ab80' },\n  { label: 5, color: '#7336ab' }\n];\n\nexport const initialData = {\n  tickets: [],\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'Sowing',\n      status: 'todo',\n      ticketIds: []\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'Watering',\n      status: 'doing',\n      ticketIds: []\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Sprouting',\n      status: 'doing',\n      ticketIds: []\n    }\n  },\n  columnOrder: ['column-1', 'column-2', 'column-3'],\n  isLoading: true\n};\n\nexport const availableLocations = [\n  \"基隆市\",\n  \"台北市\",\n  \"新北市\",\n  \"桃園縣\",\n  \"新竹市\",\n  \"新竹縣\",\n  \"苗栗縣\",\n  \"台中市\",\n  \"彰化縣\",\n  \"雲林縣\",\n  \"嘉義市\",\n  \"嘉義縣\",\n  \"台南市\",\n  \"高雄市\",\n  \"小琉球\",\n  \"屏東縣\",\n  \"台東縣\",\n  \"綠島\",\n  \"蘭嶼\",\n  \"花蓮縣\",\n  \"宜蘭縣\",\n  \"南投縣\",\n  \"澎湖縣\",\n  \"金門縣\",\n  \"連江縣\",\n];\n\nexport const checkValid = (e) => {\n  const { name, value } = e.target;\n  const usernameReg = /^[a-zA-Z\\d]{6,12}$/;\n  const passwordReg = /^(?=.*[A-Za-z])(?=.*\\d)[a-zA-Z\\d@$!%*#?&]{6,12}$/;\n  const result = {};\n\n  if (name === 'username' && value) {\n    const usernameBoolean = usernameReg.test(value) ? true : false;\n    result.usernameBoolean = usernameBoolean;\n  }\n  if (name === 'password' && value) {\n    const passwordBoolean = passwordReg.test(value) ? true : false;\n    result.passwordBoolean = passwordBoolean;\n  }\n  return result;\n};\n\nconst TOKEN_NAME = 'token';\nconst USER_NAME = 'user';\nconst EXPIRE_STAMP = 'expireStamp';\n\nexport const setAuthToken = (user, token, time) => {\n  localStorage.setItem(USER_NAME, user);\n  localStorage.setItem(TOKEN_NAME, token);\n  localStorage.setItem(EXPIRE_STAMP, time);\n};\n\nexport const getAuthToken = () => {\n  return localStorage.getItem(TOKEN_NAME);\n};","import React, { useState, useRef } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { RightCircleOutlined, LeftOutlined, UserOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\nimport { FunctionBlock, InputWrapper, ButtonWrapper, StyleButton, Alert } from './LoginStyle';\nimport Input from '../Input/Input';\nimport error from '../../constants/error';\nimport { login } from '../../api';\nimport { setAuthToken } from '../../utils';\n\nconst Login = ({ setIsLogin }) => {\n  const [inputValue, setInputValue] = useState({\n    username: '',\n    password: ''\n  });\n  const [errMessage, setErrMessage] = useState([]);\n  const [hasErr, setHasErr] = useState(false);\n  const isClick = useRef(true);\n  const history = useHistory();\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setInputValue({\n      ...inputValue,\n      [name]: value\n    });\n  };\n\n  const handleLogin = () => {\n    setErrMessage([]);\n    const { username, password } = inputValue;\n\n    if (!username || !password) {\n      setErrMessage([error.EMPTY_FILEDS]);\n      setHasErr(true);\n      return;\n    }\n    if (hasErr) return;\n\n    const fetchLogin = async () => {\n      let response;\n      try {\n        response = await login(username, password);\n      } catch (err) {\n        setErrMessage([error.FAIL_REGISTER[0]]);\n        setHasErr(true);\n        return;\n      }\n\n      const data = await response.json();\n      // success\n      if (response.status === 201) {\n        const { nickname, token, token_expire_stamp } = data;\n        setAuthToken(nickname, token, token_expire_stamp);\n        return history.push('./kanban');\n      };\n      // error status\n      switch (data.errno) {\n        case 'ERR_USER_LOGIN_FAILED':\n          setErrMessage([error.FAIL_LOGIN[400]]);\n          setHasErr(true);\n          break;\n\n        case 'ERR_USER_NOT_EXIST':\n          setErrMessage([error.FAIL_LOGIN[401]]);\n          setHasErr(true);\n          break;\n\n        default:\n          setErrMessage([error.FAIL_LOGIN[0]]);\n          setHasErr(true);\n      }\n    }\n\n    if (isClick.current) {\n      isClick.current = false;\n      fetchLogin();\n\n      setTimeout(() => {\n        isClick.current = true;\n      }, 3000);\n    }\n  }\n\n  return (\n    <FunctionBlock>\n      <InputWrapper>\n        <Input\n          type={'text'}\n          name={'username'}\n          placeholder=\"Username (6-12碼英數字)\"\n          prefix={<UserOutlined />}\n          value={inputValue.username}\n          handleInputChange={handleInputChange}\n          setHasErr={setHasErr}\n          errorMessage={error.INVALID_PARAMS.username}\n        />\n        <Input\n          type={'password'}\n          name={'password'}\n          placeholder=\"Password (6-12碼英數字)\"\n          prefix={<EyeInvisibleOutlined />}\n          value={inputValue.password}\n          handleInputChange={handleInputChange}\n          setHasErr={setHasErr}\n          errorMessage={error.INVALID_PARAMS.password}\n        />\n      </InputWrapper>\n      {errMessage.length > 0 && <Alert>{errMessage[0]}</Alert>}\n      <ButtonWrapper>\n        <StyleButton onClick={() => setIsLogin(false)}>\n          <span>{<LeftOutlined />}</span>\n        </StyleButton>\n        <StyleButton onClick={handleLogin}>\n          <span>{<RightCircleOutlined />}</span>\n          Login\n        </StyleButton>\n      </ButtonWrapper>\n    </FunctionBlock>\n  )\n}\n\nexport default Login;","import styled, { keyframes } from 'styled-components';\nimport { flipInX } from 'react-animations';\nimport { SiteDescription, DefaultButton } from '../../pages/LoginPage/LoginPageStyle';\n\nexport const FunctionBlock = styled(SiteDescription)`\n  animation: 1.5s ${keyframes`${flipInX}`};\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const StyleButton = styled(DefaultButton)`\n  background: ${({ theme }) => theme.colors.primary}};\n  color: ${({ theme }) => theme.colors.white}};\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Alert = styled.div`\n  color: ${({ theme }) => theme.colors.warning};\n  position: absolute;\n  bottom: 30%;\n  font-size: 16px;\n`;\n\nexport const Success = styled.div`\n  color: ${({ theme }) => theme.colors.success};\n  position: absolute;\n  bottom: 30%;\n  font-size: 16px;\n`;","const successMessage = {\n  SUCCESS_REGISTER: 'Success, Please log in！'\n};\n\nexport default successMessage;","import React, { useState, useRef } from 'react';\nimport { RightCircleOutlined, LeftOutlined, UserOutlined, EyeInvisibleOutlined, SmileOutlined } from '@ant-design/icons';\nimport { FunctionBlock, InputWrapper, ButtonWrapper, StyleButton, Alert, Success } from './RegisterStyle';\nimport Input from '../Input/Input';\nimport error from '../../constants/error';\nimport success from '../../constants/success';\nimport { register } from '../../api';\n\nconst Register = ({ setIsRegister, setIsLogin }) => {\n  const [inputValue, setInputValue] = useState({\n    nickname: '',\n    username: '',\n    password: ''\n  });\n  const [successMessage, setSuccessMessage] = useState([]);\n  const [errMessage, setErrMessage] = useState([]);\n  const [hasErr, setHasErr] = useState(false);\n  const isClick = useRef(true);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setInputValue({\n      ...inputValue,\n      [name]: value\n    });\n  };\n\n  const handleRegister = () => {\n    const { nickname, username, password } = inputValue;\n\n    if (!nickname || !username || !password) {\n      setErrMessage([error.EMPTY_FILEDS]);\n      setHasErr(true);\n      return;\n    }\n\n    if (hasErr) return;\n\n    const fetchRegister = async () => {\n      let response;\n      try {\n        response = await register(username, password, nickname);\n      } catch (err) {\n        setErrMessage([error.FAIL_REGISTER[0]]);\n        setHasErr(true);\n        return;\n      }\n      // success\n      if (response.status === 204) {\n        setSuccessMessage([success.SUCCESS_REGISTER]);\n\n        setTimeout(() => {\n          setIsRegister(false);\n          setIsLogin(true);\n        }, 1800);\n        return;\n      };\n\n      const data = await response.json();\n      // error status\n      switch (data.errno) {\n        case 'ERR_USER_EXIST':\n          setErrMessage([error.FAIL_REGISTER[409]]);\n          setHasErr(true);\n          break;\n\n        default:\n          setErrMessage([error.FAIL_REGISTER[0]]);\n          setHasErr(true);\n      }\n    }\n\n    if (isClick.current) {\n      isClick.current = false;\n      fetchRegister();\n\n      setTimeout(() => {\n        isClick.current = true;\n      }, 3000);\n    }\n  };\n\n  return (\n    <FunctionBlock>\n      <InputWrapper>\n        <Input\n          type={'text'}\n          name={'nickname'}\n          placeholder=\"Nickname\"\n          prefix={<SmileOutlined />}\n          value={inputValue.nickname}\n          handleInputChange={handleInputChange}\n        />\n        <Input\n          type={'text'}\n          name={'username'}\n          placeholder=\"Username (6-12碼英數字)\"\n          prefix={<UserOutlined />}\n          value={inputValue.username}\n          handleInputChange={handleInputChange}\n          setHasErr={setHasErr}\n          errorMessage={error.INVALID_PARAMS.username}\n        />\n        <Input\n          type={'password'}\n          name={'password'}\n          placeholder=\"Password (6-12碼英數字)\"\n          prefix={<EyeInvisibleOutlined />}\n          value={inputValue.password}\n          handleInputChange={handleInputChange}\n          setHasErr={setHasErr}\n          errorMessage={error.INVALID_PARAMS.password}\n        />\n      </InputWrapper>\n      {errMessage.length > 0 && <Alert>{errMessage[0]}</Alert>}\n      {successMessage.length > 0 && <Success>{successMessage[0]}</Success>}\n      <ButtonWrapper>\n        <StyleButton onClick={() => setIsRegister(false)}>\n          <span>{<LeftOutlined />}</span>\n        </StyleButton>\n        <StyleButton onClick={handleRegister}>\n          <span>{<RightCircleOutlined />}</span>\n          Register\n        </StyleButton>\n      </ButtonWrapper>\n    </FunctionBlock>\n  )\n}\n\nexport default Register;","import React, { useState } from 'react';\nimport { RightCircleOutlined } from '@ant-design/icons';\nimport Login from '../../components/Login/Login';\nimport Register from '../../components/Register/Register';\nimport 'antd/dist/antd.css';\nimport {\n  LoginPageWrapper,\n  SiteLogo,\n  SiteDescription,\n  SiteButton,\n  StyleButton\n} from './LoginPageStyle';\n\nconst LoginPage = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  const [isLogin, setIsLogin] = useState(false);\n\n  return (\n    <LoginPageWrapper>\n      <SiteLogo>\n        for logo IMG\n      </SiteLogo>\n      {!isRegister && !isLogin && (\n        <SiteDescription>\n          <h1>Sowing</h1>\n          <p>Record\n            <br />\n            your trip or outdoor life\n            <br />\n            with the Sowing！\n          </p>\n          <SiteButton>\n            <StyleButton onClick={() => setIsRegister(true)}>\n              <span>{<RightCircleOutlined />}</span>\n              Register\n            </StyleButton>\n            <StyleButton onClick={() => setIsLogin(true)}>\n              <span>{<RightCircleOutlined />}</span>\n              Login\n            </StyleButton>\n          </SiteButton>\n        </SiteDescription>\n      )}\n      {isRegister && <Register setIsRegister={setIsRegister} setIsLogin={setIsLogin} />}\n      {isLogin && <Login setIsLogin={setIsLogin} />}\n\n    </LoginPageWrapper>\n\n  )\n}\n\nexport default LoginPage;","import styled from 'styled-components';\nimport { Layout } from 'antd';\n\nconst SectionWrapper = styled(Layout.Content)`\n  background: ${({ theme }) => theme.colors.white}};\n  padding: 50px 70px;\n  display: flex;\n`;\n\nexport default SectionWrapper;","import styled from 'styled-components';\nimport { Card, Avatar, Menu } from 'antd';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { EditOutlined, DeleteOutlined, EnvironmentFilled, PushpinFilled } from '@ant-design/icons';\nimport { categoryColors } from '../../utils';\n\nconst Container = styled.div`\n  margin-top: 10px;\n  \n  & .ant-card {\n    ${props => props.isDragging &&\n    `border: 2px dashed #C7BAA0`};\n  }\n\n  & .ant-card-extra {\n    & span:first-child {\n      margin-right: 20px;\n    }\n\n    & span + span {\n      margin-left: 12px;\n    }\n  }\n`;\n\nconst CategoryIcon = ({ category }) => {\n  const color = categoryColors[category - 1].color;\n\n  return (\n    <>\n      <Avatar style={{ backgroundColor: `${color}` }} />\n    </>\n  )\n};\n\n\nconst Ticket = ({ ticket, index, setIsAddTicket }) => {\n  const color = categoryColors[ticket.category - 1].color;\n\n  return (\n    <Draggable draggableId={ticket.id} index={index}>\n      {(provided, snapshot) => (\n\n        <Container\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          isDragging={snapshot.isDragging}\n        >\n\n          <Card\n            size=\"small\"\n            title={ticket.title}\n            extra={[\n              <PushpinFilled style={{ color: `${color}` }} />,\n              <EditOutlined\n                key=\"edit\"\n\n              />,\n              <DeleteOutlined\n                key=\"delete\"\n\n              />\n            ]}\n          >\n            <p>{<EnvironmentFilled />} {ticket.locations}</p>\n            <p>{`${ticket.startDate} ～ ${ticket.endDate}`}</p>\n          </Card>\n        </Container>\n      )}\n    </Draggable>\n  )\n};\n\nexport default Ticket;","import styled from 'styled-components';\nimport { Button, Card } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Droppable } from 'react-beautiful-dnd';\nimport Ticket from '../Ticket/Ticket';\n\nconst Container = styled(Card)`\n  width: 350px;\n  margin: 0 12px;\n  border-radius: 6px;\n  border-top-right-radius: 30px;\n  background: ${({ theme }) => theme.colors.light};\n  & button {\n    &:focus,&:hover {\n      color: ${({ theme }) => theme.colors.primary};\n      border-color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`;\n\nconst TicketList = styled.div`\n  flex-grow: 1;\n  min-height: 500px;\n  background: ${props => props.isDraggingOver ?\n    `#fbfaf8` :\n    `inherit`};\n`;\n\nconst Column = ({\n  id,\n  title,\n  columnStatus,\n  ticketData,\n  setIsAddTicket,\n  setTicketStatus\n}) => {\n\n  const handleCilckAdd = () => {\n    setIsAddTicket(true);\n    setTicketStatus({\n      columnId: id,\n      status: columnStatus\n    });\n  }\n\n  return (\n    <Droppable droppableId={id} type=\"ticket\">\n      {(provided, snapshot) => (\n        <Container\n          title={title}\n        >\n          <Button\n            type=\"dashed\" icon={<PlusOutlined />}\n            onClick={handleCilckAdd}\n          />\n          <TicketList\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n            isDraggingOver={snapshot.isDraggingOver}\n          >\n            {\n              ticketData.length > 0 &&\n              ticketData\n                .map((ticket, index) => {\n                  const [ticketContent] = [...ticket];\n\n                  return (\n                    <Ticket\n                      key={index}\n                      index={index}\n                      ticket={ticketContent}\n                      setIsAddTicket={setIsAddTicket}\n                    />\n                  )\n                })\n            }\n            {provided.placeholder}\n          </TicketList>\n        </Container>\n      )}\n    </Droppable>\n  )\n};\n\nexport default Column;","import React from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport SectionWrapper from './SectionStyle';\nimport Column from '../Column/Column';\n\nconst Section = ({\n  setIsAddTicket,\n  tickets,\n  columns,\n  columnOrder,\n  setTicketStatus,\n  setTicketsData\n}) => {\n\n  const onDragEnd = (result) => {\n    const { destination, draggableId, source } = result;\n\n    if (!destination) return;\n    if (\n      destination.index === source.index &&\n      destination.droppableId === source.droppableId\n    ) return;\n\n    const start = columns[source.droppableId];\n    const finish = columns[destination.droppableId];\n\n    if (start === finish) {\n      const column = columns[source.droppableId];\n      const newTickets = Array.from(column.ticketIds);\n\n      newTickets.splice(source.index, 1);\n      newTickets.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...column,\n        ticketIds: newTickets\n      };\n\n      return setTicketsData(ticketsData => (\n        {\n          ...ticketsData,\n          columns: {\n            ...columns,\n            [newColumn.id]: newColumn\n          }\n        }\n      ));\n    }\n\n    const startTicketIds = Array.from(start.ticketIds);\n    startTicketIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      ticketIds: startTicketIds\n    };\n\n    const finishTicketIds = Array.from(finish.ticketIds);\n    finishTicketIds.splice(destination.index, 0, draggableId);\n    const newFinish = {\n      ...finish,\n      ticketIds: finishTicketIds\n    };\n\n    setTicketsData(ticketsData => (\n      {\n        ...ticketsData,\n        columns: {\n          ...columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      }\n    ))\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <SectionWrapper>\n        {\n          columnOrder.map((columnId) => {\n            const column = columns[columnId];\n            const ticketData = column.ticketIds.map(ticketId => tickets.filter(ticket => ticket.id === ticketId));\n\n            return (\n              <Column\n                key={column.id}\n                id={column.id}\n                title={column.title}\n                columnStatus={column.status}\n                ticketData={ticketData}\n                setIsAddTicket={setIsAddTicket}\n                setTicketStatus={setTicketStatus}\n              />\n            )\n          })\n        }\n      </SectionWrapper>\n    </DragDropContext>\n  )\n}\n\nexport default Section;","import styled, { keyframes } from 'styled-components';\nimport { fadeIn } from 'react-animations';\nimport { Button, Radio } from 'antd';\n\nconst TicketEditorWrapper = styled.div`\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.6);\n  }\n`;\n\nconst Editor = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  animation: .5s ${keyframes`${fadeIn}`};\n  width: 500px;\n  height: 400px;\n  padding: 50px 30px 40px;\n  border: 2px solid ${({ theme }) => theme.colors.secondary};\n  border-radius: 6px;\n  background: white;\n  box-shadow: 6px 6px 4px 3px rgb(0 0 0 / 10%);\n`;\n\nconst InputBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nconst InputRadioBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 24px;\n`;\n\nconst Label = styled.label`\n  font-size: 16px;\n`;\n\nconst ButtonDelete = styled(Button)`\n  position: absolute;\n  top: 16px;\n  right: 16px;\n  border: transparent;\n  cursor: pointer;\n`;\n\nconst ButtonSaveBlock = styled.div`\n  text-align: end;\n  margin-top: 40px;\n\n  & button {\n    background: ${({ theme }) => theme.colors.primary};\n    color: ${({ theme }) => theme.colors.white};\n  \n    &:focus, &:hover {\n      color: ${({ theme }) => theme.colors.primary};\n      border-color: ${({ theme }) => theme.colors.primary};\n    }\n  }\n`;\n\nconst CategoryRadio = styled(Radio)`\n  margin: 0 10px;\n\n  &:first-child {\n    margin-left: 30px;\n  }\n\n  & .ant-radio-inner {\n    background: ${props => props.color};\n    width: 24px;\n    height: 24px;\n  }\n`;\n\n\nexport { TicketEditorWrapper, Editor, InputBlock, InputRadioBlock, Label, ButtonDelete, ButtonSaveBlock, CategoryRadio };","import React, { useState } from 'react';\nimport { Input, DatePicker, Button, Radio } from 'antd';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { categoryColors, availableLocations } from '../../utils';\nimport {\n  TicketEditorWrapper,\n  Editor,\n  InputBlock,\n  InputRadioBlock,\n  Label,\n  ButtonDelete,\n  ButtonSaveBlock,\n  CategoryRadio\n} from './TicketEditorStyle';\n\nconst TicketEditor = ({\n  id,\n  ticketsData,\n  setTicketsData,\n  setIsAddTicket,\n  ticketStatus\n}) => {\n\n  const [inputValue, setInputValue] = useState({\n    title: '',\n    locations: '',\n    startDate: '',\n    endDate: '',\n    category: 1,\n  });\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setInputValue({\n      ...inputValue,\n      [name]: value,\n    });\n  };\n\n  const handleDateChange = (value, dateString) => {\n    const [startDate, endDate] = dateString;\n\n    setInputValue({\n      ...inputValue,\n      startDate,\n      endDate\n    });\n  };\n\n  const handleSave = () => {\n    const {\n      title,\n      locations,\n      startDate,\n      endDate,\n      category,\n    } = inputValue;\n\n    const column = ticketsData.columns[ticketStatus.columnId];\n    const newTickets = Array.from(column.ticketIds);\n\n    newTickets.splice(newTickets.length, 0, `ticket-${id}`);\n\n    const newColumn = {\n      ...column,\n      ticketIds: newTickets\n    };\n\n    const postTickets = async () => {\n      const response = await fetch(`http://localhost:3003/tickets`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: `ticket-${id}`,\n          title,\n          locations,\n          startDate,\n          endDate,\n          category,\n          status: ticketStatus.status\n        })\n      });\n      const data = await response.json();\n      return data;\n    };\n\n    const postColumns = async () => {\n      const response = await fetch(`http://localhost:3003/columns`, {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...ticketsData.columns,\n          [newColumn.id]: newColumn\n        })\n      });\n      const data = await response.json();\n      return data;\n    };\n\n    const post = async () => {\n      const data = await Promise.all([\n        postTickets(),\n        postColumns()\n      ]);\n      return data;\n    }\n\n    post();\n    setIsAddTicket(false);\n  };\n\n  return (\n    <TicketEditorWrapper>\n      <Editor>\n        <ButtonDelete\n          onClick={() => setIsAddTicket(false)}\n          icon={<CloseCircleOutlined />}\n        />\n\n        <InputBlock>\n          <Label htmlFor=\"title\">Title</Label>\n          <Input\n            id=\"title\"\n            name=\"title\"\n            placeholder=\"Write the place you want to go!\"\n            onChange={handleInputChange}\n          />\n        </InputBlock>\n\n        <InputBlock>\n          <Label htmlFor=\"locations\">Location</Label>\n          <Input\n            id=\"locations\"\n            list=\"location-list\"\n            name=\"locations\"\n            onChange={handleInputChange}\n          />\n          <datalist id=\"location-list\">\n            {availableLocations.map((location, index) => <option key={index} value={location} />)}\n          </datalist>\n        </InputBlock>\n\n        <InputBlock>\n          <Label htmlFor=\"date\">Date</Label>\n          <DatePicker.RangePicker\n            id=\"date\"\n            onChange={handleDateChange}\n          />\n        </InputBlock>\n\n        <InputRadioBlock>\n          <Label>Category</Label>\n          <Radio.Group name=\"category\" onChange={handleInputChange}>\n            {\n              categoryColors.map((radio, index) => (\n                <CategoryRadio\n                  key={index}\n                  color={radio.color}\n                  value={radio.label}\n                />\n              ))\n            }\n          </Radio.Group>\n        </InputRadioBlock>\n\n        <ButtonSaveBlock>\n          <Button onClick={handleSave}>Save</Button>\n        </ButtonSaveBlock>\n      </Editor>\n    </TicketEditorWrapper>\n  )\n}\n\nexport default TicketEditor;","import styled from 'styled-components';\nimport { Layout, Avatar, Button } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\n\nconst HeaderWrapper = styled(Layout.Header)`\n  background: white;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst MemberInfo = styled.div`\n  margin-right: 40px;\n\n  & span {\n    margin-left: 10px;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <HeaderWrapper>\n      <MemberInfo>\n        <Avatar size=\"small\" icon={<UserOutlined />} />\n        <span>Yichen</span>\n      </MemberInfo>\n      <Button>Log out</Button>\n    </HeaderWrapper>\n  )\n};\n\nexport default Header;","import React from 'react';\nimport styled from 'styled-components';\nimport { Layout, Menu } from 'antd';\n\nconst SiderWrapper = styled(Layout.Sider)`\n  background: white;\n  border-right: 1px solid ${({ theme }) => theme.colors.light};\n\n  & .ant-menu-item-selected {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n\n  & .ant-menu-title-content {\n    &:hover, &:focus {\n      color: ${({ theme }) => theme.colors.tertiary};\n    }\n\n    &::after {\n      border-right: 3px solid ${({ theme }) => theme.colors.primary};\n    }\n  }\n`;\n\nconst Sidebar = () => {\n  return (\n    <SiderWrapper>\n      <Menu\n        defaultSelectedKeys={['1']}\n        mode=\"inline\"\n      >\n        <Menu.Item key=\"1\">\n          All Tasks\n        </Menu.Item>\n        <Menu.Item key=\"2\">\n          TimeLine\n        </Menu.Item>\n      </Menu>\n    </SiderWrapper>\n  )\n}\n\nexport default Sidebar;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { Layout } from 'antd';\nimport Section from '../../components/Section/Section';\nimport TicketEditor from '../../components/TicketEditor/TicketEditor';\nimport Header from '../../components/Header/Header';\nimport Sidebar from '../../components/Sidebar/Sidebar';\nimport { initialData } from '../../utils';\n\nconst KanbanWrapper = styled(Layout)`\n  min-height: 800px;\n`;\n\n\nconst Kanban = () => {\n  const [isAddTicket, setIsAddTicket] = useState(false);\n  const [ticketsData, setTicketsData] = useState(initialData);\n  const [ticketStatus, setTicketStatus] = useState({\n    columnId: '',\n    status: ''\n  });\n\n  let id = ticketsData.tickets.length + 1;\n\n\n  const { tickets, columns, columnOrder } = ticketsData;\n\n  return (\n    <KanbanWrapper>\n      <Sidebar />\n      <Layout>\n        <Header />\n        <Section\n          tickets={tickets}\n          columns={columns}\n          columnOrder={columnOrder}\n          setIsAddTicket={setIsAddTicket}\n          setTicketStatus={setTicketStatus}\n          ticketsData={ticketsData}\n          setTicketsData={setTicketsData}\n        />\n        {isAddTicket &&\n          <TicketEditor\n            id={id}\n            ticketsData={ticketsData}\n            setTicketsData={setTicketsData}\n            setIsAddTicket={setIsAddTicket}\n            ticketStatus={ticketStatus}\n          />}\n      </Layout>\n    </KanbanWrapper>\n  )\n}\n\nexport default Kanban;","import styled from 'styled-components';\n\nexport const FooterWrapper = styled.div`\n  background: white;\n  height: 160px;\n  display: flex;\n  justify-content: space-around;\n`;\n\nexport const FooterLogo = styled.div``;\n\nexport const FooterInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px 0;\n\n  & a {\n    color: black;\n    text-decoration: none;\n  }\n\n  & a + a {\n    margin-top: 10px;\n  }\n`;","import React from 'react';\nimport { FooterWrapper, FooterLogo, FooterInfo } from './FooterStyle';\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <FooterLogo>I am a Logo</FooterLogo>\n      <FooterInfo>\n        <a href=\"http://google.com\">Contact</a>\n        <a href=\"http://google.com\">Github</a>\n      </FooterInfo>\n    </FooterWrapper>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { GlobalStyle, Root } from './indexStyle';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport Kanban from './pages/Kanban/Kanban';\nimport Footer from './components/Footer/Footer';\n\nconst theme = {\n  colors: {\n    primary: '#e57b2f',\n    secondary: '#C7BAA0',\n    tertiary: '#2d4a3d',\n    warning: 'tomato',\n    success: '#6cafff',\n    light: '#fbfaf8',\n    dark: '',\n    white: 'white',\n    black: 'black'\n  }\n}\n\nconst App = () => {\n  return (\n    <Root>\n      <Router>\n        <GlobalStyle />\n        <Switch>\n          <Route exact path=\"/\" component={LoginPage} />\n          <Route path=\"/HomePage/:id\" />\n          <Route path=\"/kanban\" component={Kanban} />\n        </Switch>\n      </Router>\n      <Footer />\n    </Root>\n  );\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}